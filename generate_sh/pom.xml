<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.bj58.projeff</groupId>
	<artifactId>mvnTest</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>mvnTest Maven Webapp</name>
	<url>http://maven.apache.org</url>



	<!-- 全局变量 -->
	<properties>
		<!-- 使用指定字符集复制资源文件 -->
		<!-- [INFO] maven-resources-plugin:2.6:resources (default-resources) @ 
			mvnTest -->
		<!-- [WARNING] Using platform encoding (GBK actually) to copy filtered 
			resources, i.e. build is platform dependent -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- 指定编译时jdk版本 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>3.9.0</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- <dependency> <groupId>com.google.protobuf</groupId> <artifactId>protobuf-java</artifactId> 
			<version>3.4.0</version> </dependency> -->
		<dependency>
			<groupId>dom4j</groupId>
			<artifactId>dom4j</artifactId>
			<version>1.6.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/jaxen/jaxen -->
		<dependency>
			<groupId>jaxen</groupId>
			<artifactId>jaxen</artifactId>
			<version>1.1.6</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
			<version>3.5.3.201412180710-r</version>
		</dependency>
		<dependency>
			<groupId>com.bj58.iwork</groupId>
			<artifactId>com.bj58.iwork.gitlab4j</artifactId>
			<version>4.8.32</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.37</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>17.0</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.12</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.tmatesoft.svnkit</groupId>
			<artifactId>svnkit</artifactId>
			<version>1.8.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.8</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>5.0.7.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>5.0.7.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>5.0.7.RELEASE</version>
			<scope>test</scope>
		</dependency>



		<dependency>
			<groupId>com.bj58.spat</groupId>
			<artifactId>com.bj58.spat.wtable.client</artifactId>
			<version>1.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.1</version>
		</dependency>
	</dependencies>
	<build>
		<!-- java resource 默认文件夹/src/main/resources，添加额外的资源文件 -->
		<resources>
			<resource>
				<directory>src/main/resources_add_1</directory>
			</resource>
		</resources>
		<!-- The filename (excluding the extension, and with no path information) 
			that the produced artifact will be called. The default value is ${artifactId}-${version}. -->
		<!-- <finalName>112233</finalName> -->
		<outputDirectory>workspace/build</outputDirectory>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!--${project.build.directory} class的输出目录不做设置的话默认代表项目根目录的target目录； 
								也可以使用“自定义文件夹/自定义文件夹 例如：a/b”，也可以使用绝对路径如：“D:\test” -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<excludeTransitive>false</excludeTransitive>
							<stripVersion>false</stripVersion>
							<!-- <includeScope>runtime</includeScope> -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 只有一个构建目标：clean，作用是删除构建产物文件夹，默认是target -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<!-- 跳过cleanup，等同于命令行方式：mvn clean -Dmaven.clean.skip=true -->
					<!-- <skip>true</skip> -->
					<!-- 忽略cleanup是发生的错误，等同于命令行方式：mvn clean -Dmaven.clean.failOnError=false -->
					<failOnError>false</failOnError>
					<!-- cleanup时清除额外的文件 -->
					<!-- <filesets> <fileset> <directory>some/relative/path</directory> 
						<includes> <include>**/*.tmp</include> <include>**/*.log</include> </includes> 
						<excludes> <exclude>**/important.log</exclude> <exclude>**/another-important.log</exclude> 
						</excludes> <followSymlinks>false</followSymlinks> </fileset> </filesets> -->
				</configuration>
				<!-- 每一次构建的initialize阶段自动运行clean插件 <executions> <execution> <id>auto-clean</id> 
					<phase>initialize</phase> <goals> <goal>clean</goal> </goals> </execution> 
					</executions> -->
			</plugin>
			<!-- -->
			<plugin>
				<configuration>
					<!-- webapp构建目录 The directory where the webapp is built. default: ${project.build.directory}/${project.build.finalName} -->
					<!-- <webappDirectory>ddd/eee</webappDirectory> -->
					<!-- WAR包生成目录 The directory for the generated WAR. default: ${project.build.directory} -->
					<outputDirectory>warCustomOutput2/test</outputDirectory>
					<!-- 定义war包名称，与finalName同时存在时，以warName为准 -->
					<warName>war-custom-name-2</warName>
					<!-- <resourceEncoding>UTF-8</resourceEncoding> -->
				</configuration>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<!-- jar包生成目录 The directory for the generated WAR. default: ${project.build.directory} -->
					<outputDirectory>jarCustomOutput1/test</outputDirectory>
					<jarName>jar-custom-name-1</jarName><!-- jar包不支持这种方式定义包名称 -->
				</configuration>
			</plugin>

			<!-- 复制资源文件到输出文件夹，有3个目标：resources、testResources、copy-resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- used to compile Java sources 两个目标(阶段)：compile、testCompile，分别编译 main 
				source和test source 3.0版本以后，编译插件默认使用jdk1.6编译java源码 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<!-- The -source/target argument for the Java compiler. NOTE: Since 
						3.8.0 -->
					<!-- the default value has changed from 1.5 to 1.6 -->
					<source>1.8</source>
					<target>1.8</target>
					<!-- Compile Using Memory Allocation Enhancements -->
					<fork>true</fork>
					<meminitial>128m</meminitial>
					<maxmem>512m</maxmem>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
